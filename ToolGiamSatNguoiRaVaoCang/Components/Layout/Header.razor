@using System.ComponentModel
@inject NavigationManager NavigationManager

<div class="page-header">
    <DxButton Click="ToggleNavbar" 
              NavigateUrl="@UrlGenerator.GetUrl(new Uri(NavigationManager.Uri).LocalPath, !IsToggled)"
              CssClass="menu-button" 
              IconCssClass="icon icon-menu"
              RenderStyle="@ButtonRenderStyle.Secondary"
              RenderStyleMode="ButtonRenderStyleMode.Text"></DxButton>
    <DxButton NavigateUrl="/" RenderStyle="ButtonRenderStyle.None" RenderStyleMode="ButtonRenderStyleMode.Text">
        <img src="/images/logo.png" width="97" height="35" alt="logo" />
    </DxButton>
    <DxButton RenderStyle="ButtonRenderStyle.None"
              Text="LAIP" CssClass="title"
              RenderStyleMode="ButtonRenderStyleMode.Text"
              NavigateUrl="/" />
    <div class="flex-space"></div>
    <AuthorizeView Context="AuthContext">
        <Authorized>
            <div class="header-item-right">
                <NavLink href="Account/Manage">
                    <DxButton RenderStyle="@ButtonRenderStyle.Primary"
                              Text="@AuthContext.User.Identity?.Name"
                              CssClass="menu-button-nav"
                              RenderStyleMode="@ButtonRenderStyleMode.Outline"
                              IconCssClass="bi bi-person-circle user"></DxButton>
                </NavLink>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken />
                    <input type="hidden" name="ReturnUrl" value="" />
                    <DxButton RenderStyle="@ButtonRenderStyle.Primary"
                              SubmitFormOnClick="true" Text="Log out"
                              RenderStyleMode="@ButtonRenderStyleMode.Outline"
                              CssClass="menu-button-nav logout"
                              IconCssClass="bi bi-box-arrow-left"></DxButton>
                </form>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="header-item-right">
                <NavLink href="Account/Register">
                    <DxButton RenderStyle="@ButtonRenderStyle.Primary"
                              Text="Register"
                              RenderStyleMode="@ButtonRenderStyleMode.Outline"
                              CssClass="menu-button-nav register"
                              IconCssClass="bi bi-r-circle"></DxButton>
                </NavLink>
                <NavLink href="Account/Login">
                    <DxButton RenderStyle="@ButtonRenderStyle.Primary"
                              Text="Log in"
                              RenderStyleMode="@ButtonRenderStyleMode.Outline"
                              CssClass="menu-button-nav login"
                              IconCssClass="bi bi-box-arrow-in-right"></DxButton>
                </NavLink>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    [Parameter]
    public EventCallback<bool> ToggleSidebar { get; set; }

    [Parameter]
    public bool IsToggled { get; set; }

    private async Task ToggleNavbar()
    {
        await ToggleSidebar.InvokeAsync(IsToggled);
    }
}
