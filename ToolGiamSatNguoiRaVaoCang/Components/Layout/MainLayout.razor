@using DevExpress.Blazor.Internal
@using ToolGiamSatNguoiRaVaoCang.Utilities
@implements IDisposable
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager


<div class="page">
    <div class="header">
        <div class="header-item">
            <div>
                <a class="btn btn-info toggle-button" onclick="MenuToggle()">☰</a>
            </div>
            <div>
                <div class="title">LAIP</div>
            </div>
        </div>
        <div class="flex-space header-item" />
        <AuthorizeView Context="AuthContext">
            <Authorized>
                <div class="header-item header-item-right">
                    <NavLink href="Account/Manage">
                        <DxButton RenderStyle="@ButtonRenderStyle.Light" Text="@AuthContext.User.Identity?.Name" RenderStyleMode="@ButtonRenderStyleMode.Text" IconCssClass="bi bi-person-circle"></DxButton>
                    </NavLink>
                </div>
                <div class="header-item header-item-right">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="" />
                        <DxButton RenderStyle="@ButtonRenderStyle.Light" SubmitFormOnClick="true" Text="Log out" RenderStyleMode="@ButtonRenderStyleMode.Text" IconCssClass="bi bi-box-arrow-left"></DxButton>
                    </form>

                </div>
            </Authorized>
            <NotAuthorized>
                <div class="header-item header-item-right">
                    <NavLink href="Account/Register">
                        <DxButton RenderStyle="@ButtonRenderStyle.Light" Text="Register" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button-nav" IconCssClass="bi bi-r-circle"></DxButton>
                    </NavLink>
                </div>
                <div class="header-item header-item-right">
                    <NavLink href="Account/Login">
                        <DxButton RenderStyle="@ButtonRenderStyle.Light" Text="Log in" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button-nav" IconCssClass="bi bi-box-arrow-in-right"></DxButton>
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </div>
    <div class="body">
        <div id="side-navbar">
            <div id="search-box">
                <DxComboBox Data="@MenuList"
                            Value="@item"
                            ValueChanged="@((Item country) => FilterList(country))"
                            SearchMode="@ListSearchMode.AutoSearch"
                            TextFieldName="@nameof(Item.VietName)"
                            SearchFilterCondition="ListSearchFilterCondition.Contains"
                            ListRenderMode="ListRenderMode.Virtual"
                            NullText="Tìm kiếm" />
            </div>
            <div id="expanded-menu">
                <DxMenu Orientation="@Orientation.Vertical"
                        CssClass="side-nav-menu"
                        DisplayMode="MenuDisplayMode.Auto">
                    <Items>
                        <DxMenuItem NavigateUrl="/" Text="Dashboard" IconCssClass="bi bi-house-door-fill" />
                        <DxMenuItem NavigateUrl="/company" Text="Công ty" IconCssClass="bi bi-building" />
                        <DxMenuItem NavigateUrl="/shift" Text="Ca làm việc" IconCssClass="bi bi-clock" />
                    </Items>
                </DxMenu>
            </div>
            <div id="hidden-menu">
                <DxMenu Orientation="@Orientation.Vertical"
                        CssClass="side-nav-menu"
                        DisplayMode="MenuDisplayMode.Auto">
                    <Items>
                        <DxMenuItem NavigateUrl="/" IconCssClass="bi bi-house-door-fill" />
                        <DxMenuItem NavigateUrl="/company" IconCssClass="bi bi-building" />
                        <DxMenuItem NavigateUrl="/shift" IconCssClass="bi bi-clock" />
                    </Items>
                </DxMenu>
            </div>
        </div>
        <div id="content">
            @Body
        </div>
    </div>
</div>


<script>
    function MenuToggle(){
        if(document.getElementById("side-navbar").style.width!="30px"){
            document.getElementById("side-navbar").style.width="30px";
            document.getElementById("search-box").style.display="none";
            document.getElementById("expanded-menu").style.display="none";
            document.getElementById("hidden-menu").style.display="block";
        }else{
            document.getElementById("side-navbar").style.width="15rem";
            document.getElementById("search-box").style.display="block";
            document.getElementById("expanded-menu").style.display="block";
            document.getElementById("hidden-menu").style.display="none";
        }
    }

</script>

@code {
    public bool ShowNavMenu { get; set; }
    public string? searchText { get; set; }

    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

@code {
    class Item
    {
        public string VietName { get; set; }
        public string EngName { get; set; }
    }
    private List<Item> MenuList { get; set; } = new()
    {
        new Item { VietName="Dashboard", EngName=""},
        new Item { VietName="Công ty", EngName="Company"},
    };
    private List<Item> FilterMenuList { get; set; } = new();
    private Item item { get; set; } = new();
    private async Task FilterList(Item searchText)
    {
        NavigationManager.NavigateTo($"/{searchText.EngName}");
    }
}