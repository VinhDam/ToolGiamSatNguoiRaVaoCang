@page "/shift"
@inject IShiftRepository _companyRepository
@rendermode InteractiveServer
@inject ApplicationDbContext _db

<h5 style="margin: 0;padding: 0;">Danh sách ca làm việc</h5>

<EditForm Model="Shift"
          OnValidSubmit="SaveItem"
          FormName="EditForm"
          Context="EditFormContext">
    <DataAnnotationsValidator />
    <DxFormLayout CssClass="w-100">
        <DxFormLayoutGroup Caption="Form cập nhật ca làm việc"
                           ExpandButtonDisplayMode="GroupExpandButtonDisplayMode.Start"
                           AnimationType="LayoutAnimationType.Slide"
                           ColSpanLg="12">
            <DxFormLayoutItem Caption="Mã ca làm việc" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="2">
                <DxTextBox @bind-Text="@Shift.Code"
                           NullText="Nhập mã số"
                           BindValueMode="BindValueMode.OnInput"
                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                           CssClass="cw-480"
                           InputId="tbShiftID" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Ca làm việc" CaptionPosition="CaptionPosition.Vertical" ColSpanMd="2">
                <DxTextBox @bind-Text="@Shift.Name"
                           NullText="Nhập tên công ty"
                           BindValueMode="BindValueMode.OnInput"
                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                           CssClass="cw-480"
                           InputId="tbShiftName" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Mô tả" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="2">
                <DxTextBox @bind-Text="@Shift.Description"
                           NullText="Nhập mô tả"
                           BindValueMode="BindValueMode.OnInput"
                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                           InputId="tbShiftDescription"
                           CssClass="cw-480" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Trạng thái" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="1">
                <DxCheckBox @bind-Checked="@Shift.Status" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Loại ưu tiên" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="2">
                <DxComboBox Data="@Priorities"
                            @bind-Value="@Shift.PriorityId"
                            TextFieldName="@nameof(IssuePriority.Name)"
                            ValueFieldName="@nameof(IssuePriority.Id)"
                            NullText="Chọn loại khu vực"
                            SearchMode="@ListSearchMode.AutoSearch"
                            SearchFilterCondition="@ListSearchFilterCondition.Contains"
                            ListRenderMode="ListRenderMode.Virtual"
                            CssClass="cw-480"
                            InputId="cbVirtualScrolling" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Giờ bắt đầu" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="2">
                <DxTimeEdit @bind-Time="@Shift.StartHour" />
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Giờ kết thúc" CaptionPosition="CaptionPosition.Vertical" ColSpanLg="2">
                <DxTimeEdit @bind-Time="@Shift.EndHour" />
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanMd="3">
                <div class="save-layout">
                    <div>
                        <DxButton CssClass="w-100"
                                  RenderStyle="ButtonRenderStyle.Info"
                                  RenderStyleMode="ButtonRenderStyleMode.Outline"
                                  SubmitFormOnClick="true"
                                  Text="Save" />
                    </div>
                    <div>
                        <DxButton CssClass="w-100"
                                  RenderStyle="ButtonRenderStyle.Info"
                                  RenderStyleMode="ButtonRenderStyleMode.Outline"
                                  Text="Clear"
                                  Click="Clear" />
                    </div>
                </div>
            </DxFormLayoutItem>
        </DxFormLayoutGroup>
    </DxFormLayout>
</EditForm>

<div style="margin: 0;padding: 0;">Tổng số nhà thầu: @Companies.Count()</div>

<DxLoadingPanel Visible="IsProcessing"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Fetching Data...">
    <DxGrid Data="Companies"
            @ref="Grid"
            CssClass="ch-360"
            ShowSearchBox="true"
            ShowGroupPanel="true"
            PagerPosition="GridPagerPosition.Bottom"
            PagerVisible="true"
            PageSizeSelectorVisible="true"
            PageSizeSelectorAllRowsItemVisible="false"
            PageSizeSelectorItems="@(new int[] { 25, 50, 75 })"
            PageSize="25"
            PagerVisibleNumericButtonCount="5"
            PagerNavigationMode="PagerNavigationMode.Auto"
            SelectionMode="GridSelectionMode.Single"
            @bind-SelectedDataItem="@SelectedDataItem"
            DataItemDeleting="Grid_DataItemDeleting"
            AllowSelectRowByClick="true"
            ColumnResizeMode="GridColumnResizeMode.NextColumn"
            RowDoubleClick="ChooseRowToEdit"
            ShowFilterRow="true"
            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always" >
        <Columns>
            <DxGridDataColumn Caption="STT" Width="50px" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center">
                <CellDisplayTemplate>
                    @(context.VisibleIndex + 1)
                </CellDisplayTemplate>
            </DxGridDataColumn>
            <DxGridDataColumn FieldName="Code" Caption="Mã ca làm việc" />
            <DxGridDataColumn FieldName="Name" Caption="Ca làm việc" />
            <DxGridDataColumn FieldName="Description" Caption="Mô tả" />
            <DxGridDataColumn FieldName="Status" Caption="Trạng thái" TextAlignment="GridTextAlignment.Left" Width="120px">
                <CellDisplayTemplate>
                    @GetIssueStatusIcon(((Shift)context.DataItem).Status,
                             ((Shift)context.DataItem).CreateDate,
                             ((Shift)context.DataItem).UpdateDate)
                </CellDisplayTemplate>
            </DxGridDataColumn>
            <DxGridDataColumn FieldName="PriorityId" Caption="Ưu tiên" Width="90px">
                <CellDisplayTemplate>
                    @GetIssuePriorityIconHtml((context.DataItem as Shift).Priority)
                </CellDisplayTemplate>
            </DxGridDataColumn>
            <DxGridDataColumn FieldName="StartHour" Caption="Giờ bắt đầu" Width="130px"/>
            <DxGridDataColumn FieldName="EndHour" Caption="Giờ kết thúc" Width="130px" />
            <DxGridDataColumn Caption="Action" TextAlignment="GridTextAlignment.Center" CaptionAlignment="GridTextAlignment.Center" Width="75px">
                <CellDisplayTemplate>
                    <a class="oi oi-trash" @onclick="@(() => Grid.ShowRowDeleteConfirmation(context.VisibleIndex))" style="text-decoration:none;cursor: pointer;" />
                </CellDisplayTemplate>
            </DxGridDataColumn>
        </Columns>
        <SearchBoxTemplate>
            <div class="search-box-template">
                <div class="item">
                    <DxButton SizeMode="SizeMode.Medium" Click="ExportXlsx_Click" Text="Export XLSX" RenderStyleMode="ButtonRenderStyleMode.Outline" RenderStyle="ButtonRenderStyle.Info" />
                </div>
                <div>
                    <DxTextBox NullText="Tìm kiếm"
                               BindValueMode="BindValueMode.OnInput"
                               TextChanged="(string? v)=>context.SearchText = v"
                               ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                </div>
            </div>
        </SearchBoxTemplate>
    </DxGrid>
</DxLoadingPanel>



@code {
    IGrid Grid { get; set; }
    bool ExportSelectedRowsOnly { get; set; }
    public bool IsProcessing { get; set; }
    private IEnumerable<Shift> Companies { get; set; } = new List<Shift>();
    private List<IssuePriority> Priorities { get; set; } = new List<IssuePriority>();
    private Shift Shift { get; set; } = new Shift();
    private object SelectedDataItem { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCompanies();
        }
    }
    private async Task LoadCompanies()
    {
        IsProcessing = true;
        StateHasChanged();
        await Task.Delay(1500);
        Companies = await _companyRepository.GetAllAsync();
        Priorities = await _db.IssuePriority.ToListAsync();
        IsProcessing = false;
        StateHasChanged();
    }
    private async Task SaveItem()
    {
        if (SelectedDataItem == null)
        {
            await _companyRepository.CreateAsync(Shift);
            await Clear();
        }
        else
        {
            await _companyRepository.UpdateAsync(Shift);
            await Clear();
        }

    }
    private async Task Clear()
    {
        Shift = new();
        await LoadCompanies();
    }
    async Task ExportXlsx_Click()
    {
        await Grid.ExportToXlsxAsync("ExportResult", new GridXlExportOptions()
            {
                ExportSelectedRowsOnly = ExportSelectedRowsOnly,
            });
    }
    public MarkupString GetIssuePriorityIconHtml(IssuePriority priority)
    {
        string priorytyClass = "warning";
        string title = "Trung bình";
        if (priority == null)
        {
            priorytyClass = "none";
            title = "Không có";
            string nullpriority = string.Format("<span class='badge priority-{0}' title='Ưu tiên {1}' b-v2bewct92u>{1}</span>", priorytyClass, title);
            return new MarkupString(nullpriority);
        }
        if (priority.Name == "Cao")
        {
            priorytyClass = "danger";
            title = "Cao";
        }
        if (priority.Name == "Thấp")
        {
            priorytyClass = "info";
            title = "Thấp";
        }
        string html = string.Format("<span class='badge priority-{0}' title='Ưu tiên {1}' b-v2bewct92u>{1}</span>", priorytyClass, title);
        return new MarkupString(html);
    }
    public MarkupString GetIssueStatusIcon(bool status, DateTime createDate, DateTime updateDate)
    {
        string statusIconName = "";
        if (status)
        {
            if (createDate.Date == updateDate.Date && createDate.TimeOfDay == updateDate.TimeOfDay)
            {
                statusIconName = "new";
            }
            else
            {
                statusIconName = "fixed";
            }
        }
        else
        {
            statusIconName = "rejected";
        }
        string html = string.Format("<span class='status-icon status-icon-{0} me-1 rounded-circle d-inline-block' b-v2bewct92u></span> {0}",
        statusIconName);
        return new MarkupString(html);
    }
    async Task Grid_DataItemDeleting(GridDataItemDeletingEventArgs e)
    {
        await _companyRepository.DeleteAsync(((Shift)e.DataItem).Id);
        await LoadCompanies();
    }
    async Task ChooseRowToEdit()
    {
        Shift = SelectedDataItem as Shift;
    }
}
